/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.ResultSet;
import javax.swing.JOptionPane;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;


public class ReturnBook extends javax.swing.JFrame {
    // Connection c=Connect.ConnectToDB();
    // PreparedStatement pst;
    // ResultSet rs;
                
    /**
     * Creates new form ReturnBook
     */
    private List<Map<String, String>> issues;
    public ReturnBook() {
        initComponents();
    }
    public void clear(){
        txtbookid.setText("");
        txtbookname.setText("");
        txtduedate.setText("");
        txtissuedate.setText("");
        txtstudentid.setText("");
        txtstudentname.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton6 = new javax.swing.JButton();
        txtduedate = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtissuedate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtbookname = new javax.swing.JTextField();
        txtbookid = new javax.swing.JTextField();
        txtstudentid = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtstudentname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close icon.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1088, 0, 50, -1));

        txtduedate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtduedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 560, 350, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Book ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 270, 50));

        txtissuedate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtissuedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, 350, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Student ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 270, 50));

        jButton1.setBackground(new java.awt.Color(204, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(242, 242, 242));
        jButton1.setText("Return");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 640, 130, 40));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Issue Date");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 490, 270, 50));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Book Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, 220, 50));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Due Date");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 560, 270, 50));

        txtbookname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtbookname, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, 350, 40));

        txtbookid.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtbookid, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, 350, 40));

        txtstudentid.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtstudentid, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, 350, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(242, 242, 242));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/isue.jpg"))); // NOI18N
        jLabel1.setText("Return Book");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 240, 60));

        jButton2.setBackground(new java.awt.Color(204, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(242, 242, 242));
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 267, -1, -1));

        txtstudentname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtstudentname, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, 350, 40));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Student Name");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 220, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/All Page Backgraound.jpg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 1140, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // try {
        //     pst=c.prepareStatement("SELECT * FROM library.book where id=?");
        //     pst.setString(1, txtstudentid.getText());
        //     rs=pst.executeQuery();
        //     if(rs.next()){
        //             txtbookname.setText(rs.getString("name"));
        //             txtbookid.setText(rs.getString("id"));
        //             txtissuedate.setText(rs.getString("issue"));
        //             txtduedate.setText(rs.getString("due"));
        //     }
        //     else
        //         JOptionPane.showMessageDialog(this, "Please Enter Valied Student ID");
        //     pst=c.prepareStatement("SELECT * FROM library.student where id=?");
        //     pst.setString(1, txtstudentid.getText());
        //     rs=pst.executeQuery();
        //     if(rs.next())
        //             txtstudentname.setText(rs.getString("name"));
            
        // } catch (SQLException ex) {
        //     Logger.getLogger(SignIn.class.getName()).log(Level.SEVERE, null, ex);
        // }        // TODO add your handling code here:
        try {
            File f = new File("StudentRegsitrations.txt");
            BufferedReader br = new BufferedReader(new FileReader(f));

            String line;
            String studentid = txtstudentid.getText();
            boolean studentfound = false;
            while((line = br.readLine()) != null){
                if(studentid.equals(line)){
                    txtstudentname.setText(br.readLine());
                    studentfound = true;
                    break;
                }
                br.readLine();
                br.readLine();
                br.readLine();
                br.readLine();
            }
            if(!studentfound){
                JOptionPane.showMessageDialog(rootPane, "Student ID not found");
                txtstudentid.setText("");
                txtstudentid.requestFocus();
                return;
            }
            br.close();
            
            f = new File("Books.txt");
            br = new BufferedReader(new FileReader(f));

            
            String bookid = txtbookid.getText();
            boolean bookfound = false;
            while((line = br.readLine()) != null){
                if(bookid.equals(line)){
                    txtbookname.setText(br.readLine());
                    bookfound = true;
                    break;
                }
                br.readLine();
                br.readLine();
                br.readLine();
                br.readLine();
                br.readLine();
            }
            if(!bookfound){
                JOptionPane.showMessageDialog(rootPane, "Book ID not found");
                txtbookid.setText("");
                txtbookid.requestFocus();
                return;
            }

            f = new File("Issues.txt");
            br = new BufferedReader(new FileReader(f));

            boolean issuefound = false;
            issues = new ArrayList<>();

            while((line = br.readLine()) != null){
                // if(bookid.equals(line) && studentid.equals(br.readLine())){
                //     txtissuedate.setText(br.readLine());
                //     txtduedate.setText(br.readLine());
                //     issuefound = true;
                //     break;
                // }
                Map<String, String> issue = new HashMap<>();
                issue.put("bookid", line);
                issue.put("studentid", br.readLine());
                issue.put("issuedate", br.readLine());
                issue.put("duedate", br.readLine());
                issues.add(issue);
                if(issue.get("bookid").equals(bookid) && issue.get("studentid").equals(studentid)){
                    txtissuedate.setText(issue.get("issuedate"));
                    txtduedate.setText(issue.get("duedate"));
                    issuefound = true;
                    break;
                }
            }
            if(!issuefound){
                JOptionPane.showMessageDialog(rootPane, "Book not issued to this student");
                txtbookid.setText("");
                txtbookid.requestFocus();
                return;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(txtbookid.getText().equals("")){
                JOptionPane.showMessageDialog(rootPane, "Please enter Student ID and Search it again");
                txtstudentid.requestFocus();
        }
        else{
            // try{
            // pst=c.prepareStatement("UPDATE `library`.`book` SET `status` = 'NotIssue', `issue` = '', `due` = '', `studentid` = '' WHERE (`id` = ?)");
            // pst.setString(1, txtstudentid.getText());
            // pst.executeUpdate();
            // JOptionPane.showMessageDialog(this, "Return Successfull");
            // clear();
            // } catch (SQLException ex) {
            //     Logger.getLogger(SignIn.class.getName()).log(Level.SEVERE, null, ex);
            // }
            for(Map<String, String> issue : issues){
                if(issue.get("bookid").equals(txtbookid.getText()) && issue.get("studentid").equals(txtstudentid.getText())){
                    issues.remove(issue);
                    break;
                }
            }
            try {
                File f = new File("Books.txt");
                BufferedReader br = new BufferedReader(new FileReader(f));
                String line;
                List<Map<String, String>> books = new ArrayList<>();

                while((line = br.readLine()) != null){
                    Map<String, String> book = new HashMap<>();
                    book.put("id", line);
                    book.put("name", br.readLine());
                    book.put("publisher", br.readLine());
                    book.put("price", br.readLine());
                    book.put("year", br.readLine());
                    book.put("status", br.readLine());
                    books.add(book);
                }

                br.close();
                for(Map<String, String> book : books){
                    if(book.get("id").equals(txtbookid.getText())){
                        book.put("status", "NotIssued");
                        break;
                    }
                }
                f = new File("Books.txt");
                f.delete();
                f.createNewFile();
                for(Map<String, String> book : books){
                    try (BufferedWriter fw = new BufferedWriter(new FileWriter(f, true))) {
                        fw.write(book.get("id"));
                        fw.newLine();
                        fw.write(book.get("name"));
                        fw.newLine();
                        fw.write(book.get("publisher"));
                        fw.newLine();
                        fw.write(book.get("price"));
                        fw.newLine();
                        fw.write(book.get("year"));
                        fw.newLine();
                        fw.write(book.get("status"));
                        fw.newLine();
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Error: " + e.getMessage());
            }
            JOptionPane.showMessageDialog(this, "Return Successfull");
            clear();

        }
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtbookid;
    private javax.swing.JTextField txtbookname;
    private javax.swing.JTextField txtduedate;
    private javax.swing.JTextField txtissuedate;
    private javax.swing.JTextField txtstudentid;
    private javax.swing.JTextField txtstudentname;
    // End of variables declaration//GEN-END:variables
}
